<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
    POM file.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.apache.ignite</groupId>
    <artifactId>h2-fork</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Fork of H2 Database Engine</name>
    <description>Fork of H2 Database Engine for Apache Ignite.</description>

    <licenses>
        <license>
            <name>MPL 2.0</name>
            <url>https://www.mozilla.org/en-US/MPL/2.0/</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>EPL 1.0</name>
            <url>https://opensource.org/licenses/eclipse-1.0.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <slf4j.version>1.6.0</slf4j.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- START COMPILE DEPENDENCIES !-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.locationtech.jts</groupId>
            <artifactId>jts-core</artifactId>
            <version>1.15.0</version>
        </dependency>
        <!-- END COMPILE DEPENDENCIES !-->


        <!-- START TEST DEPENDENCIES !-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>7.0</version>
            <scope>test</scope>
        </dependency>
        <!-- END TEST DEPENDENCIES !-->
    </dependencies>

    <!-- The test code creates proxy files using javac or tools.jar. Through maven we need to tell it
         where to possibly find tools.jar and annoyingly its called classes.jar on OSX -->
    <profiles>
        <profile>
            <id>java9+</id>
            <activation>
                <jdk>[1.9,)</jdk>
            </activation>
            <dependencies/>
        </profile>
        <profile>
            <id>default-tools.jar</id>
            <activation>
                <file>
                    <exists>${java.home}/../lib/tools.jar</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                    <scope>system</scope>
                    <version>1.8</version>
                    <systemPath>${java.home}/../lib/tools.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>default-tools.jar-mac</id>
            <activation>
                <file>
                    <exists>${java.home}/../Classes/classes.jar</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                    <scope>system</scope>
                    <version>1.8</version>
                    <systemPath>${java.home}/../Classes/classes.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <sourceDirectory>src/main</sourceDirectory>
        <testSourceDirectory>src/test</testSourceDirectory>
        <!-- Resources do not follow maven project layout. We need to manually copy them -->
        <resources>
            <resource>
                <directory>src/main</directory>
                <includes>
                    <include>**/*.prop</include>
                    <include>**/*.png</include>
                    <include>**/*.jsp</include>
                    <include>**/*.ico</include>
                    <include>**/*.gif</include>
                    <include>**/*.css</include>
                    <include>**/*.js</include>
                    <include>org/h2/res/help.csv</include>
                    <include>org/h2/server/pg/pg_catalog.sql</include>
                    <include>org/h2/res/javadoc.properties</include>
                    <include>META-INF/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/java9/precompiled</directory>
                <targetPath>META-INF/versions/9</targetPath>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test</directory>
                <includes>
                    <include>org/h2/test/scripts/**/*.sql</include>
                    <include>org/h2/samples/newsfeed.sql</include>
                    <include>org/h2/samples/optimizations.sql</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <!-- Add tools folder to test sources but consider moving them to src/test -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/tools</source>
                                <source>src/test/META-INF/**</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <h2.maxMemoryRows>100</h2.maxMemoryRows>
                        <h2.delayWrongPasswordMin>0</h2.delayWrongPasswordMin>
                        <h2.delayWrongPasswordMax>0</h2.delayWrongPasswordMax>
                        <h2.useThreadContextClassLoader>true</h2.useThreadContextClassLoader>
                        <h2.clientTraceDirectory>target/trace.db/</h2.clientTraceDirectory>
                        <h2.javaSystemCompiler>false</h2.javaSystemCompiler>
                    </systemPropertyVariables>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.build.outputDirectory}</additionalClasspathElement>
                        <additionalClasspathElement>${project.build.testOutputDirectory}</additionalClasspathElement>
                    </additionalClasspathElements>
                    <excludes>
                        <exclude>TestAllJunit.java</exclude>
                        <exclude>H2TestCase.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
